# -*- coding: utf-8 -*-
"""Graph_creator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jzJU6TiWlNloXJ9Pf_I1lEHNBrXzni0m
"""

import pickle, os
import matplotlib.pyplot as plt
import numpy as np

env_name = 'HalfCheetah-v2'

# gets all the file paths ending in .pickle from a directory
def get_files_from_paths(paths):
    files = []
    for path in paths :
        if os.path.isfile(path):
            files.append(path)
        else :
            for file in os.listdir(path):
                if file.endswith('.pickle'):
                    files.append(path + '/' + file)
    return files

swimmer_v1_paths = [
    f"../outputs/{env_name}/v1/1904016/save/",
    f"../outputs/{env_name}/v1/1954056/save/",
    f"../outputs/{env_name}/v1/1952752/save/" 
]
swimmer_v2_paths = [
    f"../outputs/{env_name}/v2/1904016/save/",
    f"../outputs/{env_name}/v2/1954056/save/",
    f"../outputs/{env_name}/v2/1952752/save/" 
]
swimmer_v2_t_paths = [
    f"../outputs/{env_name}/v2-t/1904016/save/",
    f"../outputs/{env_name}/v2-t/1954056/save/",
    f"../outputs/{env_name}/v2-t/1952752/save/" 
]
swimmer_100seeds_paths = [
    f"../outputs/{env_name}/v2-t/rs/save/"
]

swimmer_v1_files = get_files_from_paths(swimmer_v1_paths)
swimmer_v2_files = get_files_from_paths(swimmer_v2_paths)
swimmer_v2_t_files = get_files_from_paths(swimmer_v2_t_paths)
swimmer_100seeds_files = get_files_from_paths(swimmer_100seeds_paths)

def read_file(path):
    with open(path, "rb") as f:
        return pickle.load(f)

# reads a list of pickle file paths and returns the rewards
def read_files(paths):
    all_rewards = None
    for path in paths :
        rewards = read_file(path).rewards
        rewards = np.array(rewards).reshape(1,-1)
        if all_rewards is None:
            all_rewards = rewards
        else :
            all_rewards = np.vstack((all_rewards, rewards))
    return all_rewards

swimmer_v1_rewards = read_files(swimmer_v1_files)
swimmer_v2_rewards = read_files(swimmer_v2_files)
swimmer_v2_t_rewards = read_files(swimmer_v2_t_files)
swimmer_100seeds_rewards = read_files(swimmer_100seeds_files)

def plot_three_seeds(experiments, label=None, color=None, mul = 2):
    mean_exp = np.mean(experiments, axis=0)
    std_exp = np.std(experiments, axis=0)
    x = np.arange(len(mean_exp)) * 2 * mul
    plt.plot(x, mean_exp, color=color, label=label)
    plt.fill_between(x, mean_exp + std_exp,
    mean_exp - std_exp, color=color, alpha=0.1)

def plot_quantiles_seeds(experiments, label=None, color=None):
    perc = np.quantile(experiments, [0, 0.05, 0.20, 1.0], axis=0)
    mean_exp = np.median(experiments, axis=0)
    print(np.min(experiments[:, -1]))
    print(experiments.shape)
    plt.plot(mean_exp, color=color, label=label)
    plt.plot(perc[1], color='Gray', label=label, alpha=0.2)
    plt.plot(perc[2], color='Gray', label=label, alpha=0.2)
    plt.plot(perc[3], color='Gray', label=label, alpha=0.2)
    plt.fill_between(range(len(experiments[0])), perc[0], perc[1],  color=color, alpha=0.05, label = '0-5')
    plt.fill_between(range(len(experiments[0])), perc[1], perc[2],  color=color, alpha=0.1, label = '5-20')
    plt.fill_between(range(len(experiments[0])), perc[2], perc[3],  color=color, alpha=0.3, label = '20-100')
    plt.legend()

#print(len(swimmer_v2_t_rewards[0]))
plot_three_seeds(swimmer_v1_rewards, label="V1", color = "Blue", mul = 4)
plot_three_seeds(swimmer_v2_rewards, label="V2", color = "Green", mul = 4)
plot_three_seeds(swimmer_v2_t_rewards, label="V2-t", color = "Red", mul = 8)
plt.title(env_name)
plt.xlabel("Episodes")
plt.ylabel("Average Rewards")
plt.legend()
plt.show()

plot_quantiles_seeds(swimmer_100seeds_rewards)
plt.title(f"{env_name} over 100 seeds")
plt.xlabel("Episodes")
plt.ylabel("Average Rewards")
plt.show()


